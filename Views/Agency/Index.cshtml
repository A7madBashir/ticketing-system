@{
    ViewData["Title"] = "Agency Management";
}

@section Styles {
    <link rel="stylesheet" type="text/css" href="~/lib/metronic/plugins/custom/datatables/datatables.bundle.css">
    <style>
        /* Optional: Add some custom styling for better card spacing or filter layout */
        .card {
            margin-bottom: 20px;
        }

        .filter-controls .form-group {
            margin-bottom: 1rem;
        }

        /* Style for DataTables buttons if needed */
        div.dt-button-collection button.dt-button {
            background-color: #007bff;
            /* Primary color */
            color: white;
            border: none;
        }

        /* Make filter inputs slightly wider on small screens if desired */
        @@media (max-width: 767.98px) {

            .filter-controls .col-md-3,
            .filter-controls .col-md-4 {
                flex: 0 0 100%;
                max-width: 100%;
            }
        }
    </style>
}

<div class="card">
    <!--begin::Card header-->
    <div class="card-header border-0 pt-6">
        <!--begin::Card title-->
        <div class="card-title">
            <!--begin::Search-->
            <div class="d-flex align-items-center position-relative my-1">
                <!--begin::Svg Icon | path: icons/duotune/general/gen021.svg-->
                <span class="svg-icon svg-icon-1 position-absolute ms-6">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                        <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1"
                            transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
                        <path
                            d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z"
                            fill="black"></path>
                    </svg>
                </span>
                <!--end::Svg Icon-->
                <input type="text" data-kt-table-filter="search" class="form-control form-control-solid w-250px ps-15"
                    placeholder="Search Agencies" />
            </div>
            <!--end::Search-->
        </div>
        <!--begin::Card title-->
        <!--begin::Card toolbar-->
        <div class="card-toolbar">
            <!--begin::Toolbar-->
            <div class="d-flex justify-content-end" data-kt-customer-table-toolbar="base">
                <!--begin::Filter-->
                <button type="button" class="btn btn-light-primary me-3" data-kt-menu-trigger="click"
                    data-kt-menu-placement="bottom-end">
                    <!--begin::Svg Icon | path: icons/duotune/general/gen031.svg-->
                    <span class="svg-icon svg-icon-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <path
                                d="M19.0759 3H4.72777C3.95892 3 3.47768 3.83148 3.86067 4.49814L8.56967 12.6949C9.17923 13.7559 9.5 14.9582 9.5 16.1819V19.5072C9.5 20.2189 10.2223 20.7028 10.8805 20.432L13.8805 19.1977C14.2553 19.0435 14.5 18.6783 14.5 18.273V13.8372C14.5 12.8089 14.8171 11.8056 15.408 10.964L19.8943 4.57465C20.3596 3.912 19.8856 3 19.0759 3Z"
                                fill="black"></path>
                        </svg>
                    </span>
                    <!--end::Svg Icon-->Filter
                </button>
                <!--begin::Menu 1-->
                <div class="menu menu-sub menu-sub-dropdown w-300px w-md-325px" data-kt-menu="true"
                    id="kt-toolbar-filter">
                    <!--begin::Header-->
                    <div class="px-7 py-5">
                        <div class="fs-4 text-dark fw-bolder">Filter Options</div>
                    </div>
                    <!--end::Header-->
                    <!--begin::Separator-->
                    <div class="separator border-gray-200"></div>
                    <!--end::Separator-->
                    <!--begin::Content-->
                    <div class="px-7 py-5">
                        <!-- Filter by Subscription Plan -->
                        <div class="mb-10">
                            <label class="form-label fs-5 fw-bold mb-3">Subscription Plan:</label>
                            <select class="form-select form-select-solid fw-bolder" data-kt-select2="true"
                                data-placeholder="Select Subscription Plan" data-allow-clear="true"
                                data-kt-agency-table-filter="subscription_id" data-dropdown-parent="#kt-toolbar-filter">
                                <option></option>
                                <!-- Options will be dynamically loaded by JavaScript -->
                            </select>
                        </div>
                        <!--begin::Actions-->
                        <div class="d-flex justify-content-end">
                            <button type="reset" class="btn btn-light btn-active-light-primary me-2"
                                data-kt-menu-dismiss="true" data-kt-agency-table-filter="reset">
                                Reset
                            </button>
                            <button type="submit" class="btn btn-primary" data-kt-menu-dismiss="true"
                                data-kt-agency-table-filter="filter">
                                Apply
                            </button>
                        </div>
                        <!--end::Actions-->
                    </div>
                    <!--end::Content-->
                </div>
                <!--end::Menu 1-->
                <!--end::Filter-->
                <!--begin::Add agency-->
                <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                    data-bs-target="#kt_modal_add_agency">
                    Add Agency
                </button>
                <!--end::Add agency-->
            </div>
            <!--end::Toolbar-->
            <!--begin::Group actions-->
            <div class="d-flex justify-content-end align-items-center d-none" data-kt-customer-table-toolbar="selected">
                <div class="fw-bolder me-5">
                    <span class="me-2" data-kt-customer-table-select="selected_count"></span>Selected
                </div>
                <button type="button" class="btn btn-danger" data-kt-customer-table-select="delete_selected">
                    Delete Selected
                </button>
            </div>
            <!--end::Group actions-->
        </div>
        <!--end::Card toolbar-->
    </div>
    <!--end::Card header-->

    <div class="card-body pt-0">
        <div class="table-responsive">
            <table id="data-table" class="table table-row-bordered table-stripped align-middle fs-6 gs-7 gy-5"
                style="width:100%">
                <thead>
                    <tr>
                        <td>Name</td>
                        <td>Domain</td>
                        <td>Subscription Plan</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add Agency Modal -->
<div class="modal fade" id="kt_modal_add_agency" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header" id="kt_modal_add_agency_header">
                <h2 class="fw-bolder">Add New Agency Details</h2>
                <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1"
                                transform="rotate(-45 6 17.3137)" fill="black" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)"
                                fill="black" />
                        </svg>
                    </span>
                </div>
            </div>
            <div class="modal-body mx-5 mx-xl-15 my-7">
                <form id="kt_modal_add_agency_form" method="post" class="form">
                    <div class="d-flex flex-column scroll-y me-n7 pe-7" id="kt_modal_add_agency_scroll"
                        data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}"
                        data-kt-scroll-max-height="auto" data-kt-scroll-offset="300px">

                        <div class="row g-9 mb-7">
                            <div class="col-md-12 fv-row">
                                <label class="required fw-bold fs-6 mb-2">Agency Name</label>
                                <input type="text" name="Name" class="form-control form-control-solid"
                                    placeholder="e.g., My Awesome Agency" required />
                            </div>
                        </div>
                        <div class="row g-9 mb-7">
                            <div class="col-md-12 fv-row">
                                <label class="fw-bold fs-6 mb-2">Domain</label>
                                <input type="text" name="Domain" class="form-control form-control-solid"
                                    placeholder="e.g., myagency.com" />
                            </div>
                        </div>
                        <div class="row g-9 mb-7">
                            <div class="col-md-12 fv-row">
                                <label class="required fw-bold fs-6 mb-2">Subscription Plan</label>
                                <select name="SubscriptionId" class="form-select form-select-solid fw-bolder"
                                    data-kt-select2="true" data-placeholder="Select a Subscription Plan"
                                    data-allow-clear="true" required data-hide-search="true"
                                    id="addAgencySubscriptionSelect">
                                    <option></option>
                                    <!-- Options will be dynamically loaded by JavaScript -->
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="text-center pt-15">
                        <button type="reset" class="btn btn-light me-3" data-bs-dismiss="modal">Discard</button>
                        <button type="submit" id="kt_add_agency_submit_button" class="btn btn-primary"
                            data-kt-users-modal-action="submit">
                            <span class="indicator-label">Submit</span>
                            <span class="indicator-progress">Please wait...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Agency Modal -->
<div class="modal fade" id="kt_modal_edit_agency" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header" id="kt_modal_edit_agency_header">
                <h2 class="fw-bolder">Edit Agency Details</h2>
                <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                    <span class="svg-icon svg-icon-1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1"
                                transform="rotate(-45 6 17.3137)" fill="black" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)"
                                fill="black" />
                        </svg>
                    </span>
                </div>
            </div>
            <div class="modal-body scroll-y mx-5 mx-xl-15 my-7">
                <form id="kt_modal_edit_agency_form" class="form">
                    <input type="hidden" name="Id" id="editAgencyId" value="" />

                    <div class="d-flex flex-column scroll-y me-n7 pe-7" id="kt_modal_edit_agency_scroll"
                        data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}"
                        data-kt-scroll-max-height="auto" data-kt-scroll-offset="300px">

                        <div class="row g-9 mb-7">
                            <div class="col-md-12 fv-row">
                                <label class="required fw-bold fs-6 mb-2">Agency Name</label>
                                <input type="text" name="Name" class="form-control form-control-solid"
                                    placeholder="e.g., My Awesome Agency" required />
                            </div>
                        </div>
                        <div class="row g-9 mb-7">
                            <div class="col-md-12 fv-row">
                                <label class="fw-bold fs-6 mb-2">Domain</label>
                                <input type="text" name="Domain" class="form-control form-control-solid"
                                    placeholder="e.g., myagency.com" />
                            </div>
                        </div>
                        <div class="row g-9 mb-7">
                            <div class="col-md-12 fv-row">
                                <label class="required fw-bold fs-6 mb-2">Subscription Plan</label>
                                <select name="SubscriptionId" class="form-select form-select-solid fw-bolder"
                                    data-kt-select2="true" data-placeholder="Select a Subscription Plan"
                                    data-allow-clear="true" required data-hide-search="true"
                                    id="editAgencySubscriptionSelect">
                                    <option></option>
                                    <!-- Options will be dynamically loaded by JavaScript -->
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="text-center pt-15">
                        <button type="reset" class="btn btn-light me-3" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" id="kt_edit_agency_submit_button">
                            <span class="indicator-label">Save Changes</span>
                            <span class="indicator-progress">Please wait...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/metronic/plugins/custom/datatables/datatables.bundle.js"></script>
    <script src="~/js/dataTable/init.js"></script>
    <script src="~/js/forms/form-submit-handler.js"></script>
    <script src="~/js/forms/ajaxSelect2Handler.js"></script>
    <script>
        $(document).ready(function () {
            let dataTable;
            let allSubscriptions = []; // To store subscription data for dropdowns

            // Function to fetch all subscriptions for dropdowns
            async function fetchSubscriptionsForDropdown() {
                try {
                    const response = await fetch('/api/Subscription');
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const subscriptions = await response.json();
                    allSubscriptions = subscriptions.data || [];
                    populateSubscriptionDropdowns();
                } catch (error) {
                    console.error("Failed to fetch subscriptions for dropdown:", error);
                    Swal.fire({
                        text: "Failed to load subscription plans. Please refresh the page.",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn btn-primary"
                        }
                    });
                }
            }

            // Function to populate the subscription dropdowns
            function populateSubscriptionDropdowns() {
                const addSelect = $('#addAgencySubscriptionSelect');
                const editSelect = $('#editAgencySubscriptionSelect');
                // const filterSelect = $("[data-kt-agency-table-filter='subscription_id']");

                // Clear existing options, keep the placeholder
                addSelect.find('option:not(:first)').remove();
                editSelect.find('option:not(:first)').remove();
                // filterSelect.find('option:not(:first)').remove();

                select2AjaxSearchHandleListener("[data-kt-agency-table-filter='subscription_id']", { multiple: false }, "/api/Subscription",
                    (params) => {
                        var query = {
                            search: params.term,
                            length: 15,
                            draw: 1,
                            page: (params.page + 1) || 1
                        }
                        return query;
                    }, (data, params) => {
                        return {
                            results: data.data,
                            pagination: {
                                more: ((params.page || 1) * 15) < data.recordsFiltered
                            }
                        }
                    }, "search for a subscription", (data) => {
                        return data.planName || data.id
                    }, (data) => {
                        return data.planName || data.text || data.id
                    });

                allSubscriptions.forEach(sub => {
                    const option = `<option value="${sub.id}">${sub.planName} ($${parseFloat(sub.price).toFixed(2)})</option>`;
                    addSelect.append(option);
                    editSelect.append(option);
                    // filterSelect.append(option);
                });

                // Re-initialize Select2 if it's already bound
                if (addSelect.data('select2')) {
                    addSelect.trigger('change');
                }
                if (editSelect.data('select2')) {
                    editSelect.trigger('change');
                }
                //if (filterSelect.data('select2')) {
                // filterSelect.trigger('change');
                //}
            }

            function initializeAgenciesDataTable() {
                dataTable = new DataTableSSR("/api/Agency", [
                    { data: "name", "name": "Name", class: "" },
                    { data: "domain", "name": "Domain", class: "" },
                    {
                        data: "subscription",
                        "name": "Subscription",
                        class: "",
                        render: function (data) {
                            return data?.planName || 'N/A';
                        }
                    },
                    { "data": null, class: "text-end" }
                ], [
                    {
                        targets: -1,
                        render: function (data, full, row) {
                            let res = dataTable.generateEditLinkDataTableRow(`#`, null, [`item-id='${data.id}'`])
                                + " | " + dataTable.generateDeleteLinkDataTableRow(data.id);

                            return res;
                        }
                    }
                ]);

                dataTable.initDataTableObj("#data-table", null, null, [{
                    event: "draw",
                    action: () => {
                        dataTable.deleteRowsBtnEvents("[data-kt-docs-table-filter='delete_row']", null, 0);
                        dataTable.initialTooltip();
                        handleEditModalListener();
                    }
                }]);

                function handleEditModalListener() {
                    $("#data-table tr [data-kt-docs-table-filter='edit_row']").on("click", async (e) => {
                        let id = e.currentTarget.getAttribute("item-id");
                        $("#kt_modal_edit_agency").modal("show");
                        await fetchAndAppendAgencyModal(id);
                    });
                }

                dataTable.customSearchDataTable("[data-kt-table-filter='search']");
                dataTable.customizeDataTableQueryParams = () => {
                    let q = {};
                    q.filters = {
                        subscriptionId : $('[data-kt-agency-table-filter="subscription_id"]').val()
                    }
                    return q
                };
            }

            // Initialize the DataTable
            initializeAgenciesDataTable();

            // Handle filter button click
            $("[data-kt-agency-table-filter='filter']").on("click", function () {
                const subscriptionId = $("[data-kt-agency-table-filter='subscription_id']").val();
                dataTable.reDraw();
            });

            // Handle reset filter button click
            $("[data-kt-agency-table-filter='reset']").on("click", function () {
                $("[data-kt-agency-table-filter='subscription_id']").val("").trigger("change");
                dataTable.clearCustomFilters();
                dataTable.reDraw();
            });

            // Instantiate the FormSubmitHandler for the Add Agency modal
            const addAgencyFormHandler = new FormSubmitHandler({
                formSelector: '#kt_modal_add_agency_form',
                submitButtonSelector: '#kt_add_agency_submit_button',
                apiEndpoint: '/api/Agency',
                method: 'POST',
                clearFormOnSuccess: true,
                onSuccess: (data) => {
                    Swal.fire({
                        text: "Agency created successfully!",
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn btn-primary"
                        }
                    }).then(() => {
                        const modalElement = document.getElementById('kt_modal_add_agency');
                        const modal = bootstrap.Modal.getInstance(modalElement);
                        if (modal) {
                            modal.hide();
                        }
                        dataTable.reDraw();
                    });
                },
                onError: (errorData) => {
                    const errorMessage = errorData.message || "Failed to create agency. Please try again.";
                    Swal.fire({
                        text: errorMessage,
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn btn-primary"
                        }
                    });
                },
                formDataType: 'json'
            });

            // Instantiate the FormSubmitHandler for the Edit Agency modal
            const editAgencyFormHandler = new FormSubmitHandler({
                formSelector: '#kt_modal_edit_agency_form',
                submitButtonSelector: '#kt_edit_agency_submit_button',
                apiEndpoint: "/api/Agency", // This will be set dynamically when editing
                method: 'PUT', // Default method, will be overridden for specific agency
                clearFormOnSuccess: false,
                onSuccess: (data) => {
                    Swal.fire({
                        text: "Agency updated successfully!",
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn btn-primary"
                        }
                    }).then(() => {
                        const modalElement = document.getElementById('kt_modal_edit_agency');
                        const modal = bootstrap.Modal.getInstance(modalElement);
                        if (modal) {
                            modal.hide();
                        }
                        dataTable.reDraw();
                    });
                },
                onError: (errorData) => {
                    const errorMessage = errorData.message || "Failed to update agency. Please try again.";
                    Swal.fire({
                        text: errorMessage,
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn btn-primary"
                        }
                    });
                },
                formDataType: 'json'
            });

            // Function to fetch agency data and populate the edit modal
            async function fetchAndAppendAgencyModal(agencyId) {
                if (!agencyId) {
                    console.error("Edit button missing data-id attribute.");
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Agency ID not found for editing.',
                    });
                    return;
                }

                toggleBlockUI(); // Show loading indicator

                try {
                    const response = await fetch(`/api/Agency/${agencyId}`);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const agencyData = await response.json();

                    // Populate form fields
                    $('#kt_modal_edit_agency_form #editAgencyId').val(agencyData.id);
                    $('#kt_modal_edit_agency_form input[name="Name"]').val(agencyData.name);
                    $('#kt_modal_edit_agency_form input[name="Domain"]').val(agencyData.domain);

                    // Set the subscription dropdown value
                    const subscriptionSelect = $('#editAgencySubscriptionSelect');
                    subscriptionSelect.val(agencyData.subscriptionId || '').trigger('change');

                    // Dynamically set the API endpoint for the edit form handler
                    editAgencyFormHandler.options.apiEndpoint = `/api/Agency/${agencyId}`;

                } catch (error) {
                    console.error("Failed to fetch agency details:", error);
                    Swal.fire({
                        text: "Could not load agency details. Please try again.",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn btn-primary"
                        }
                    });
                } finally {
                    toggleBlockUI(); // Hide loading indicator
                }
            }

            // Initial fetch for subscriptions when the page loads
            fetchSubscriptionsForDropdown();
        });
    </script>
}